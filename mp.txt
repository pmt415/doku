-----------------------------------------------------------------------------
-----------------------------------------------------------------------------
http://jenkins-m1kkot-ci-cd.apps.eu45.prod.nextcle.com
http://books-m1kkot-books-dev.apps.eu45.prod.nextcle.com
http://console-openshift-console.apps.eu45.prod.nextcle.com
http://nexus-common.apps.eu45.prod.nextcle.com



-----------------------------------------------------------------------------
oc <verb> <rtype> [<name>]
oc new-project <name>   / oc new-project ${RHT_OCP4_DEV_USER}-docker-build
oc new-app https://...
oc get all / oc get all -l app=php-hello / oc get pods/rc/dc jne..
oc describe podName
oc delete pod podName   / oc delete all --all
oc explain podName
oc logs -f bc/nimi / oc start-build nimi / oc start-build --follow bc/nimi

oc login -u ... -p ....  (log in to openshift)
oc get templates -n openshift | grep jenkins   (inspect the jenkins templates that are available in openshift)

oc projects   (näyttää projektit)
oc project <projekti nimi>   switch between projects
-----------------------------------------------------------------------------
container image (sisältää metadataa, kertoo miten container pystytetään) 
-> container engine -> creates groups, starts container services
-----------------------------------------------------------------------------
Dockerfile: build instructions to build the image
container: 1..n linux process + filesystem (created by image), isolated, 
	we can run hundreds of contariner/host - very cheap and effective,  
APPlication container:
sidecar (container): (process+filesystem), non functional actions
POD: 
 - collection 1..n containers  (APP container + sidecar)
 - scale together
 - share network namespace
 - share access to volumes
 - run all or none on the same host
ReplicationController or ReplicaSet  (pod factory)
 - pod template (how to create pod)
 - unique names for pods
 - replicas: 3
 - selector: 
	labels
Deployment configurator (RC factory)
 - DeploymentConfig (replicas, selector, template, strategy:rolling/)
 - oc rollout/rollback ...
Service  (how to find pods)  
 - selector (label on the pods, these are find in dc!)
 - ports  (port, targetport)
ROUTE:
 - expose you app to outside
--------------
PersistentVolumeClaim
---------------------------------------------------------------
lab-configure
---------------------------------------------------------------
early errors -> no data on logs
1. init:error
2. errImagePull
-- 
3. error
4. crashLoopBackoff  --> logs
-----------------------------
Builder pod errors:
first: oc describe build hello-test
second: look at the build config - oc describe buildconfig hello-test
-------------------------------------------
Applicationr pod errors:
first: replicaSET -> oc describe replicaset name
second:  deployment (config) --> oc describe Deployment/mysql
-------------------------------------------
logs, describe build, buildconfig, pod, replicaset, deployment
===========================================
cat <<EOF
> llsl
> lsls
>EOF
cat <tiedoston nimi>
-----------------------------
echo 'polku.tiedostonNimi' >> .bashrc
-----------------------------
/usr/local/etc/ocp4.config
-----------------------------
cd ~  
cd ..  back to parent directory
cd <dir>
cd    back to home dir..
ls
ls /
ls -l
ls -l *.name_test
mkdir jail/lib54
ls /lib54
cp /bin/bash ./jail/
tree ./jail/
which tree
/tree /
echo $$
echo $UID
echo $HOSTNAME
chroot ./jail/ //bash/  (vaihda root)
ldd /bin/dd   (shared libraries)
period 10000
quota 1000
(1000000 = 1sek)
echo 10000 > cpu.cfs_period_us
echo 1000 > cpu.cfs_quota_us
ls /bin/
ps    (prosessit)
-------------
podman ps (podman prosessit)
podman kill prosNRO
podman ps -a
podman --help
podman build --layers=false -t imageName
podman images
> podman run ubi8/ubi
podman inspect ubi8/ubi    (local)
podman inspect ubi8/ubi | less
podman login -u pmt415 -p ${PASS} quay.io
podman logout quay.io
podman logout --all
----------
vim /home/student/DO180/labs/dockerfile-create/Dockerfile
cd /home/student/DO180/labs/dockerfile-create
sudo podman build --layers=false -t do180/apache
sudo podman iamges              (tarkista imaget)
sudo podman run --name lab-apache -d -p 10080:80 do180/apache  (aja container, käytä apache imagea)
sudo podman ps
curl 127.0.0.1:10080   (testaa että serveri toimii)
------------------------------------------
host www.google.com
----------
skopeo inspect docker://quay.io/redhattraining/imageName:v1.0      (remote)
--------
oc: OpensShift client
oc <verb> <rtype> [<name>]
oc https -u userID -p PSW
oc new-project name..
oc new-app https://github.com/sclorg/ruby-ex.git
	(oc new-app --strategy=source https://....  / oc new-app https://....  )
oc project
oc create -f ./apod.yml
oc get all     (all == is, bc, dc, build, svc, rc, replicasets, pods)
oc get all -l app=php-hello
oc get pods  / oc get rc / oc get dc  
oc get svc / oc get routes / oc get pvc
oc get pods -o wide
oc get endpoints
oc describe pod/podNAME
oc describe is "name"   (image stream)
oc delete pod podNAME
oc delete all --all
oc explain pod
oc explain pod.spec.volume
oc scale ....
oc rollout ...
oc rollback ....
oc logs podName/etc...

oc new-project ${RHT_OCP4_DEV_USER}-docker-build
oc logs -f bc/echo
oc start-build echo
oc delect all -l app=echo

oc start-build --follow bc/greet

oc whoami --show-console

oc get -o=yaml dc/jenkins
---------------------------------------------------
curl http://...
-------------------------------------------
vim /home/student/DO180/labs/dockerfile-create/Dockerfile
	i -->   insert-tilaan   
	esc   --> takaisin norm.tilaan
	:wq   lopeta ja tallenna
	:q    lopeta ilman tallenusta
-----------------------------------------
Lataa classroom env configuration::
	source /usr/local/etc/ocp4.config
-----------------------------------------
kirjoita alku + tab --> linux täydentää lopun
komento + 2xtab  --> lista alikomennoista
-----------------------------------------------------------------
The Location field provides a link to the external route for the application; 
http://php-helloworld-${RHT_OCP4_DEV_USER}-console.${RHT_OCP4_WILDCARD_DOMAIN}
-----------------------------------------------------------------
grep RHT_OCP4_WILDCARD_DOMAIN /usr/local/etc/ocp4.config
---------------------------
source /usr/local/etc/ocp4.config   --ladataan...
oc login -u ${RHT_OCP4_DEV_USER} p ${RHT_OCP4_DEV_PASSWORD} ${RHT_OCP4_MASTER_API}
oc get route -n openshift-console
-----------------------------------------------------------------
project Details/workloads/add other content 
--> add Container image 
--> deploy image : quay.io/redhattraining/php-hello-dockerfile
-----------------------------------------------------------------
lab-configure
=================================================================
git clone https://github.com/pmt415/...
git clone https://github.com/pmt415/DO288-apps

cd ~/DO180-apps
git checkout master
git checkout -b s2i
git push -u origin s2i

git add .
git commit -m 'kommentti'
git push origin s2i
=================================================================
git stash  (discard any pending changes on the current branch)

git checkout master
git branch -d your-branch  (delete local branch)
git puch origin --delete your-branch (delete remote branch)

commit any pending changes in your local rep and push them to-->
- cd ~/DO288-apps
- git commit -a -m 'kommentti'
- git push
=================================================================




































